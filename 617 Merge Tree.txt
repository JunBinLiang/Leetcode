/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {

    public TreeNode mergeTrees(TreeNode root1, TreeNode root2) {
       if(root1==null&&root2==null){
           return null;
       }
        
       if(root1==null&&root2!=null){
           helper(new TreeNode(0),root2);
           return root2;
       }
        if(root2==null&&root1!=null){
            helper(root1,new TreeNode(0));
            return root1;
        }
        
        helper(root1,root2); 
        return root2;
    }
    
    public void helper(TreeNode root1, TreeNode root2){    
        if(root1==null&&root2==null){
            return;
        } 
        
        int val1=root1.val;
        int val2=root2.val;
        root1.val=val1+val2;
        root2.val=val1+val2;
        
        if(root1.left!=null&&root2.left!=null){
            helper(root1.left,root2.left);
        }
         if(root1.right!=null&&root2.right!=null){
            helper(root1.right,root2.right);
        }
        
        if(root1.left==null&&root2.left!=null){
            root1.left=new TreeNode(0);
            helper(root1.left,root2.left);
        }
        else if(root1.left!=null&&root2.left==null){
            root2.left=new TreeNode(0);
            helper(root1.left,root2.left);
        }
        
         if(root1.right==null&&root2.right!=null){
            root1.right=new TreeNode(0);
            helper(root1.right,root2.right);
        }
        else if(root1.right!=null&&root2.right==null){
            root2.right=new TreeNode(0);
            helper(root1.right,root2.right);
        }
          
      
    }
    

}