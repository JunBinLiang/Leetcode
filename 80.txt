class Solution {
    public int removeDuplicates(int[] nums) {
        int counter=0;
        Map<Integer,Integer>map=new HashMap();
        int i=0;
        int length=nums.length;
         while(i<length)
         {
             //System.out.print(i);
            if(map.containsKey(nums[i]))
            {
                if(map.get(nums[i])==2){
                    remove(nums,i);
                    length--;
                    counter++;
                    continue;
                    
                }else{
                    map.replace(nums[i],2);
                }
                
                
            }else
            {
                map.put(nums[i],1);
            }
            i++;
        }
        
        
        return nums.length-counter;
    }
    public void remove(int[] nums,int index){
        for(int i=index;i<nums.length-1;i++){
            nums[i]=nums[i+1];
        }
    }
}




















class Solution {
    public int removeDuplicates(int[] nums) {
        int counter=0;
        Map<Integer,Integer>map=new HashMap();
        for(int i=0;i<nums.length;i++){
            if(map.containsKey(nums[i])){
                if(map.get(nums[i])==2){
                   // remove(nums,i);
                    counter++;
                    
                }else{
                    map.replace(nums[i],2);
                }
                
                
            }else{
                map.put(nums[i],1);
            }
        }
        
        int index=0;
        int arr[]=new int[nums.length-counter];
        for(Integer key:map.keySet()){
           // System.out.println(key+"   "+map.get(key));
            int times=map.get(key);
            for(int i=0;i<times;i++){
                arr[index]=key;
               // System.out.println(nums[counter]);
                index++;
            }
            
        }
        Arrays.sort(arr);
        for(int i=0;i<arr.length;i++){
            nums[i]=arr[i];
        }
        
        
        return nums.length-counter;
    }

}